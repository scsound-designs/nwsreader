/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */


plugins {
    id 'java'
	id 'java-library'
	id 'maven-publish'
	id 'application'
}

repositories {
    mavenCentral()
}

dependencies {
    api('com.google.code.gson:gson:2.10.1')
	api('org.apache.commons:commons-io:1.3.2')

	testImplementation(platform('org.junit:junit-bom:5.9.3'))
	testImplementation('org.junit.jupiter:junit-jupiter')
}

group = 'com.github.scsounddesigns.nwsreader'
version = '1.0-SNAPSHOT'
description = 'nwsreader'
sourceCompatibility = 17

publishing {
    publications {
	maven(MavenPublication) {
	    from(components.java)
	}
    }
}

/*
sourceSets {
	test {
		compileClasspath += sourceSets.main.output
		runtimeClasspath += sourceSets.main.output
		java{}
	}
}
*/


compileJava {
    options.incremental = true
	options.fork = true
	options.failOnError = false
}

java {
    toolchain {
	languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.named('test', Test) {
    useJUnitPlatform()
	dependsOn 'cleanTest'
	failFast = true

	testLogging{
	    events "passed", "skipped", "failed"
	}
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

task printSourceSetInformation() {
    doLast{
	sourceSets.each{ srcSet ->
	    print"["+srcSet.name+"]"
	    print "--->Source directories:\n" + srcSet.allJava.srcDirs + "\n"
	    print "--->Output directories:\n" + srcSet.output.classesDirs.files+"\n"
	    print "--->Compile classpath:\n"
	    srcSet.compileClasspath.files.each {
		print " " + it.path + "/n"
	    }
	    println ""

	}
    }

}
